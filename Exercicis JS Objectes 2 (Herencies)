//
class Persona{
    constructor(){
        console.log("constructor de persona");
    }
    saludar(){
        console.log("Hola!");
    }
}
class Alumne extends Persona{
    constructor(){
        super();
        console.log("constructor de alumne");
    }
}
class Repetidor extends Alumne{
    constructor(){
        super();
        console.log("constructor de repetidor");
    }
}
var a1=new Alumne();
a1.saludar();
console.log("-");
var r1=new Repetidor();
r1.saludar();

constructor de persona
constructor de alumne
Hola!
-
constructor de persona
constructor de alumne
constructor de repetidor
Hola!

//
class Persona {
    constructor(nom, cognom) {
        console.log("constructor de persona");
        this.nom = nom;
        this.cognom = cognom;
    }
    saludar() {
        console.log("Persona:" + this.nom);
        return(this.nom +" " + this.cognom);
    }
}

class Alumno extends Persona{
    constructor(nom, cognom, curso){
        super(nom, cognom);
        this.curso = curso;
        console.log("constructor de alumno");
    }
    saludar() {
        var n = "a";// super.saludar(nom, cognom);
        console.log("Sr/sra: " + n);
    }
    miSaludo() {
        var n = super.saludar();
        console.log("Sr/sra: " + n);
    }
}
class Repetidor extends Alumno{
    constructor(){
        super();
        console.log("constructor de repetidor");
    }
}


var a1 = new Alumno("Bruce","Wayne", 2);
a1.saludar();
a1.miSaludo();
console.log("----------------------");
var r1 = new Repetidor();
r1.saludar();

constructor de persona
constructor de alumno
Sr/sra: a
Persona:Bruce
Sr/sra: Bruce Wayne
----------------------
constructor de persona
constructor de alumno
constructor de repetidor
Sr/sra: a

//
class Animal {
    constructor(nombre, especie, numPatas, cola) {
      this.nombre = nombre;
      this.especie = especie;
      this.numPatas = numPatas;
      this.cola = cola;
    }
    getNombre() {
      return this.nombre;
    }  
    getEspecie() {
      return this.especie;
    }  
    getPatas() {
      return this.numPatas;
    }  
    getCola() {
      return this.cola; 
    }    
    setNombre(nombre) {
      this.nombre = nombre;
    }
    setEspecie(especie) {
      this.especie = especie;
    }  
    setPatas(patas) {
      this.numPatas = patas;
    }  
    setCola(cola) {
      this.cola = cola;
    }  
  }
class Vaca extends Animal {
    constructor(nombre, especie, numPatas, cola, litros) {
      super(nombre, especie, numPatas, cola);
      this.leche = litros;
    }
    getNumLitros() {
        return this.leche;
    } 
    
    setLeche(litros=1) {
      this.leche = litros;
    }  
  
    ordenyar(litros=1) {

      // comprobación de errores
      if(isNaN(litros)) { return -2351; }
      if(litros < 1) { return -2352; }     
      if(litros >= this.leche) {litros = this.leche;}

      //flujo del programa
      this.leche = this.leche - litros;
      return this.leche;
    }
  }
class Tigre extends Animal {
    constructor(nombre, especie, numPatas, cola, victimas) {
      super(nombre, especie, numPatas, cola);
      this.victimas = victimas;
    }  
    comerPersonas(victimas=1) {
        this.victimas += victimas;
        return this.victimas;
    }
  }
/*VACA*/
var objVaca = new Vaca('Vaca0', 'Mamífero', 4, true, 10);
console.log(objVaca);
console.log("Litros ordeñados: " + objVaca.ordenyar(1));
console.log("Litros ordeñados: " + objVaca.ordenyar(10));
objVaca.setNombre('Vaca1');
console.log('Nombre: ' + objVaca.getNombre());
/*TIGRE*/
var objTigre = new Tigre('TigerHunter', 'Mamifero', 4, true, 30, 8);
console.log(objTigre);  
objTigre.comerPersonas(3);
objTigre.setNombre('Tigre Viejo');
objTigre.setPatas(-1);
objTigre.setCola(false);  
console.log(objTigre);

Vaca {
  nombre: 'Vaca0',
  especie: 'Mamífero',
  numPatas: 4,
  cola: true,
  leche: 10
}
Litros ordeñados: 9
Litros ordeñados: 0
Nombre: Vaca1
Tigre {
  nombre: 'TigerHunter',
  especie: 'Mamifero',
  numPatas: 4,
  cola: true,
  victimas: 30
}
Tigre {
  nombre: 'Tigre Viejo',
  especie: 'Mamifero',
  numPatas: -1,
  cola: false,
  victimas: 33
}
// Pt3 UML

class Empleado {
    constructor(nom) {
        this.nom = nom;
    }
    setNombre(nom) {
        this.nom = nom;
    }
    getNombre(){
        return this.nom;
    }
    getInfo(){
        return "Empleado " + this.nom;
    }
}

class Operario extends Empleado{
    constructor(nom){
        super(nom);
    }
    getInfo(){
        return super.getInfo() + " -> Operario";
    }
}

class Directivo extends Empleado{
    constructor(nom){
        super(nom);
    }
    getInfo(){
        return super.getInfo() + " -> Directivo";
    }
}

class Oficial extends Operario{
    constructor(nom){
        super(nom);
    }
    getInfo(){
        return super.getInfo() + " -> Oficial";
    }
}

class Tecnico extends Operario{
    constructor(nom){
        super(nom);
    }
    getInfo(){
        return super.getInfo() + " -> Tecnico";
    }
}

var rafa = new Empleado("Rafa");
console.log(rafa.getInfo());

var mario = new Directivo("Mario");
console.log(mario.getInfo());

var alfonso = new Operario("Alfonso");
console.log(alfonso.getInfo());

var luis = new Oficial("Luis");
console.log(luis.getInfo());

var pablo = new Tecnico("Pablo");
console.log(pablo.getInfo());

// Empleado Rafa
// Empleado Mario -> Directivo
// Empleado Alfonso -> Operario
// Empleado Luis -> Operario -> Oficial
// Empleado Pablo -> Operario -> Tecnico   
